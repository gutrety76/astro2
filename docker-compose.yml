version: '3.8'

services:
  kong:
    image: kong:2.6
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/usr/local/kong/declarative/kong.yml"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    volumes:
      - ./kong.yml:/usr/local/kong/declarative/kong.yml
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - api-service
      - ui-service
      - rabbitmq

  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    volumes:
      - ./api-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3003:3003"
    depends_on:
      - rabbitmq
      - db

  ui-service:
    build:
      context: ./ui-service
      dockerfile: Dockerfile
    volumes:
      - ./ui-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - api-service

  # auth-service:
  #   build:
  #     context: ./auth-service
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./auth-service:/usr/src/app
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - db
      
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: astro
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: hamburger3202
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql